{"version":3,"sources":["core/constants/routes.ts","core/constants/colors.ts","core/constants/adaptive.ts","modules/Authentication/components/PasswordReset/StyledPasswordReset.ts","core/store/actions/constans.d.ts","core/store/actions/authActions.ts","modules/HomePage/WordsList/constants.ts","modules/Authentication/components/PasswordReset/PasswordReset.tsx","modules/Authentication/components/PasswordReset/constants.ts","modules/Authentication/components/SignIn/StyledSignIn.ts","modules/Authentication/components/SignIn/SignIn.tsx","modules/Authentication/components/SignIn/constants.ts","modules/Authentication/components/SignUp/StyledSignUp.ts","modules/Authentication/components/SignUp/SignUp.tsx","modules/Authentication/components/SignUp/constants.ts","modules/Authentication/Authentication.tsx","core/firebase/firebaseConfig.ts","core/firebase/index.ts","modules/HomePage/StatisticsPage/ShortTermStatistics/StyledShortTermStatistics.ts","modules/HomePage/StatisticsPage/ShortTermStatistics/ShortTermStatistics.tsx","core/store/actions/wordsActions.ts","modules/HomePage/Score/StyledScore.ts","modules/HomePage/Score/Score.tsx","modules/HomePage/WordsList/StyledWordList.ts","assets/initial-image.png","modules/HomePage/WordsList/WordsList.tsx","modules/HomePage/SpeechRecording/StyledSpeechRecording.ts","modules/HomePage/SpeechRecording/SpeechRecording.tsx","modules/HomePage/MainPage/StyledMainPage.ts","modules/HomePage/MainPage/MainPage.tsx","modules/HomePage/StatisticsPage/LongTermStatistics/StyledLongTermStatistics.ts","modules/HomePage/StatisticsPage/LongTermStatistics/LongTermStatistics.tsx","modules/HomePage/MainPage/StartPage/StyledStartPage.ts","modules/HomePage/MainPage/StartPage/StartPage.tsx","modules/HomePage/HomePage.tsx","core/routes/Routes.tsx","App.tsx","core/i18n/index.ts","core/store/reducers/currentAuth.ts","core/store/reducers/currentWords.ts","core/store/reducers/rootReducer.ts","core/firebase/firebaseAuthQueries.ts","core/store/sagas/authSaga/resetPasswordSaga.ts","core/store/sagas/authSaga/sighOutSaga.ts","core/store/sagas/authSaga/signInGoogleSaga.ts","core/store/sagas/authSaga/signInSaga.ts","core/store/sagas/authSaga/signUpSaga.ts","core/store/sagas/wordsSaga/constants.ts","core/store/sagas/wordsSaga/getWordsSaga.ts","core/store/sagas/wordsSaga/setWordSaga.ts","core/store/sagas/wordsSaga/allWordsSaga.ts","core/store/sagas/index.ts","core/store/index.ts","index.tsx"],"names":["AuthRoutes","MainRoutes","Color","Adaptive","ActionTypes","Style","Container","styled","div","Button","AuthButton","AuthButtonText","AuthButtonTextHover","Form","MainAuthBorder","notebook","Title","Links","Accept","span","AuthButtonAccept","wordsURL","Group","signInAction","user","type","SIGN_IN","payload","signErrorAction","SIGN_ERROR","PasswordReset","useState","email","setEmail","dispatch","useDispatch","t","useTranslation","onChangeHandler","useCallback","event","currentTarget","name","value","sendResetEmail","ASYNC_RESET_PASSWORD","asyncResetPassword","Item","id","placeholder","onChange","className","onClick","to","Styled","AuthGoogleButtonBackgroundColor","AuthGoogleButtonHover","MainText","SignIn","password","setPassword","logginGoogle","ASYNC_SIGN_IN_GOOGLE","asyncSignInGoogle","logginEmailAndPassword","console","log","ASYNC_SIGN_IN","asyncSignInAction","prefix","UserOutlined","suffix","title","InfoCircleOutlined","style","color","AuthFormIcon","Password","plain","GoogleOutlined","SignUp","displayName","setDisplayName","history","useHistory","onChangeHandlerEmail","onChangeHandlerPassword","onChangeHandlerName","createUser","preventDefault","ASYNC_SIGN_UP","asyncSignUp","push","home","error","toast","message","Authentication","path","signIn","component","signUp","passwordReset","from","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","apps","length","app","initializeApp","auth","firestore","database","storage","ref","generateUserDocument","a","userRef","doc","uid","get","exists","photoURL","set","getUserDocument","userDocument","data","Words","UnpredWords","GuessedWords","Buttons","ShortTermStatistics","guessedWords","setGuessedWords","unpredWords","setUnpredWords","getAllQuessedWords","useSelector","state","currentWords","quessedWords","getAllUnpredictableWords","useEffect","audioPlay","url","Audio","audioUrl","play","handlerAudioButtons","audio","hanlderBackButton","mainPage","hanlderStatisticsButton","longTermStatistics","map","res","SoundOutlined","word","transcription","i","GetWordsActions","words","GET_WORDS","GetWordsErrorActions","GET_WORDS_ERROR","AsyncGetWordsActions","ASYNC_GET_WORDS","ClearWordsActions","CLEAR_WORDS","Maintext","Score","getWordsFetch","speechWord","setWord","getAllWords","allWords","score","setScore","filter","item","some","elem","indexOf","includes","numberOfPoints","Number","group","toFixed","prevNumberOfPoints","success","QUESSED_WORDS","UNPREDICTABLE_WORDS","SetUnpredictableWordsActions","SET_SCORE","SetScoreActions","smartphone","Groups","MainImage","WordsContainer","WordsBorder","WordsText","SpokenWord","WordsList","getWordsGroup","setWords","StartImage","image","setImage","spokenWord","setSpokenWord","split","pop","ASYNC_ALL_WORDS_SESSION","getImages","imageUrl","handlerButtonsGroups","handlerImagesButtons","src","CommentOutlined","undefined","SpeechRecording","useSpeechRecognition","transcript","resetTranscript","microphoneRef","useRef","SpeechRecognition","browserSupportsSpeechRecognition","alert","renderSpeech","current","classList","add","startListening","language","continuous","stopHandle","remove","stopListening","handleReset","toLocaleLowerCase","ASYNC_SET_WORDS","Header","MainPage","currentAuth","dbScore","setDbScore","getAllScore","child","on","snapshot","val","signOut","ASYNC_SIGN_OUT","handleResultsButton","shortTermStatistics","now","Date","toLocaleString","UsersTable","table","LongTermStatistics","info","setInfo","Object","values","sorted","sort","b","handlerSortButtons","date","StartPage","handleStartButton","HomePage","startPage","Routes","onAuthStateChanged","userAuth","catch","login","App","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","EN","lng","fallbackLng","react","useSuspense","initialState","action","SIGN_OUT","RESET_PASSW","SIGN_UP","SET_WORDS","ALL_WORDS_SESSION","flat","rootReducer","combineReducers","provider","GoogleAuthProvider","resetPassword","sendPasswordResetEmail","signInEmailAndPassword","signInWithEmailAndPassword","signInWithGoogle","signInWithPopup","signUpEmailAndPassword","createUserWithEmailAndPassword","watchAuthResetPassword","workerAuthResetPassword","call","put","takeLatest","watchAuthSignOut","workerAuthSignOut","watchAuthSignInGoogle","workerAuthSignInGoogle","authChannel","workerAuthSignIn","watchAuthSignIn","Error","watchAuthSignUp","workerAuthSignUp","watchWordsGet","fetchWordsAsync","page","Math","floor","random","ceil","fetch","then","json","wordsFetch","numbers","Set","size","randomWord","items","arr","Array","watchWordsSet","workerSetWordsAsync","watchAllWords","workerAllWordsAsync","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.760ca5cc.chunk.js","sourcesContent":["export enum AuthRoutes {\n  signIn = '/signIn',\n  signUp = '/signUp',\n  passwordReset = '/passwordReset',\n  home = '/home',\n}\n\nexport enum MainRoutes {\n  shortTermStatistics = '/ShortTermStatistics',\n  longTermStatistics = '/LongTermStatistics',\n  mainPage = '/MainPage',\n  startPage = '/StartPage',\n}\n","export enum Color {\n  AuthButton = 'linear-gradient(90deg,rgba(151, 11, 221, 1) 0%, rgba(128, 11, 93, 1) 35%,rgba(237, 120, 10, 1) 100% );',\n  AuthButtonTextHover = ' rgba(0, 0, 0, 0.25)',\n  MainAuthBorder = 'rgba(0, 0, 0, 0.25)',\n  MainAuthBoxShadow = 'inset 0 0 0 1px #337ab7',\n  AuthFormIcon = 'rgba(0,0,0,.45)',\n  AuthGoogleButtonBackgroundColor = 'white',\n  AuthGoogleButtonHover = '0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.25)',\n  AuthButtonText = 'white',\n  AuthButtonAccept = 'green',\n  WordsBorder = '1px solid gray',\n  GuessedWords = 'green',\n  UnpredWords = 'red',\n}\n","export enum Adaptive {\n  notebook = '768px',\n  smartphone = '400px',\n}\n","import styled from 'styled-components';\nimport { Color } from '@core/constants/colors';\nimport { Adaptive } from '@core/constants/adaptive';\n\nconst Style = {\n  Container: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 400px;\n    margin: 0 auto;\n    height: 500px;\n    border-radius: 3px;\n    padding-top: 20px;\n  `,\n  Button: styled.div`\n    width: 250px;\n    & > .ResetPas {\n      width: 200px;\n      background: ${Color.AuthButton}\n      border: none;\n      font-size: 18px;\n      height: 30px;\n      color: ${Color.AuthButtonText};\n      transition: 0.4s linear;\n    }\n    & > .ResetPas:hover {\n      color: ${Color.AuthButtonTextHover};\n      border: none;\n    }\n  `,\n  Form: styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    border: 1px solid ${Color.MainAuthBorder};\n    padding: 80px;\n    box-shadow: ${Color.MainAuthBorder};\n    @media (max-width: ${Adaptive.notebook}) {\n      padding: 0;\n      box-shadow: none;\n      border: none;\n    }\n  `,\n  Title: styled.div`\n    font-size: 30px;\n    font-style: italic;\n    padding-bottom: 30px;\n  `,\n  Links: styled.div`\n    display: flex;\n    flex-direction: row;\n    text-align: center;\n    justify-content: space-between;\n    margin: 20px 0;\n  `,\n  Accept: styled.span`\n    color: ${Color.AuthButtonAccept};\n  `,\n};\n\nexport default Style;\n","export enum ActionTypes {\n  SIGN_IN = 'SIGN_IN',\n  SIGN_UP = 'SIGN_UP',\n  SIGN_OUT = 'SIGN_OUT',\n  RESET_PASSW = 'RESET_PASSW',\n  RESET_PASSW = 'RESET_PASSW',\n  SIGN_ERROR = 'SIGN_ERROR',\n  ASYNC_SIGN_IN = 'ASYNC_SIGN_IN',\n  ASYNC_SIGN_OUT = 'ASYNC_SIGN_OUT',\n  ASYNC_SIGN_IN_GOOGLE = 'ASYNC_SIGN_IN_GOOGLE',\n  ASYNC_SIGN_UP = 'ASYNC_SIGN_UP',\n  ASYNC_RESET_PASSWORD = 'ASYNC_RESET_PASSWORD',\n  GET_WORDS = 'GET_WORDS',\n  SET_WORDS = 'SET_WORDS',\n  ASYNC_GET_WORDS = 'ASYNC_GET_WORDS',\n  ASYNC_SET_WORDS = 'ASYNC_SET_WORDS',\n  GET_WORDS_ERROR = 'GET_WORDS_ERROR',\n  ASYNC_GET_WORDS_ERROR = 'ASYNC_GET_WORDS_ERROR',\n  ALL_WORDS_SESSION = 'ALL_WORDS_SESSION',\n  ASYNC_ALL_WORDS_SESSION = 'ASYNC_ALL_WORDS_SESSION',\n  CLEAR_WORDS = 'CLEAR_WORDS',\n  ASYNC_CLEAR_WORDS = 'ASYNC_CLEAR_WORDS',\n  QUESSED_WORDS = 'QUESSED_WORDS',\n  UNPREDICTABLE_WORDS = 'UNPREDICTABLE_WORDS',\n  SET_SCORE = 'SET_SCORE',\n}\n","import { ActionTypes } from './constans.d';\nimport {\n  AsyncResetPasswordAction,\n  AsyncSignInAction,\n  AsyncSignInGoogleAction,\n  AsyncSignOutAction,\n  AsyncSignUpAction,\n  ResetPasswordAction,\n  SignErrorAction,\n  SignInAction,\n  SignOutAction,\n  SignUpAction,\n  User,\n} from '@type/types';\n\nexport const signInAction = (user: User | null): SignInAction => {\n  return {\n    type: ActionTypes.SIGN_IN,\n    payload: user,\n  };\n};\n\nexport const signUpAction = (user: User | null): SignUpAction => {\n  return {\n    type: ActionTypes.SIGN_UP,\n    payload: user,\n  };\n};\n\nexport const signOutAction = (): SignOutAction => {\n  return {\n    type: ActionTypes.SIGN_OUT,\n  };\n};\n\nexport const resetPasswordAction = (): ResetPasswordAction => {\n  return {\n    type: ActionTypes.RESET_PASSW,\n  };\n};\n\nexport const signErrorAction = (): SignErrorAction => {\n  return {\n    type: ActionTypes.SIGN_ERROR,\n  };\n};\n\nexport const asyncSignInAction = (user: User | null): AsyncSignInAction => {\n  return {\n    type: ActionTypes.ASYNC_SIGN_IN,\n    payload: user,\n  };\n};\n\nexport const asyncSignOutAction = (): AsyncSignOutAction => {\n  return {\n    type: ActionTypes.ASYNC_SIGN_OUT,\n  };\n};\n\nexport const asyncSignInGoogle = (\n  user: User | null,\n): AsyncSignInGoogleAction => {\n  return {\n    type: ActionTypes.ASYNC_SIGN_IN_GOOGLE,\n    payload: user,\n  };\n};\n\nexport const asyncSignUp = (user: User | null): AsyncSignUpAction => {\n  return {\n    type: ActionTypes.ASYNC_SIGN_UP,\n    payload: user,\n  };\n};\n\nexport const asyncResetPassword = (\n  user: User | null,\n): AsyncResetPasswordAction => {\n  return {\n    type: ActionTypes.ASYNC_RESET_PASSWORD,\n    payload: user,\n  };\n};\n","export enum wordsURL {\n  audioUrl = 'https://raw.githubusercontent.com/M-fil/rslang-data/master/',\n  imageUrl = `https://raw.githubusercontent.com/M-fil/rslang-data/master/`,\n}\n\nexport enum Group {\n  'Group 0' = 0,\n  'Group 1' = 1,\n  'Group 2' = 2,\n  'Group 3' = 3,\n  'Group 4' = 4,\n  'Group 5' = 5,\n}\n","import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Input } from 'antd';\nimport { Toaster } from 'react-hot-toast';\nimport Style from './StyledPasswordReset';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { userEmail } from './constants';\nimport { asyncResetPassword } from '@store/actions/authActions';\n\nconst PasswordReset = (): JSX.Element => {\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const onChangeHandler = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget;\n\n      if (name === userEmail) {\n        setEmail(value);\n      }\n    },\n    [],\n  );\n\n  const sendResetEmail = useCallback(() => {\n    const user = { email };\n    dispatch(asyncResetPassword(user));\n    setEmail('');\n  }, [dispatch, email]);\n\n  return (\n    <Style.Container>\n      <Toaster />\n      <Style.Form>\n        <Form>\n          <Style.Title>{t('resetPassword.title')}</Style.Title>\n          <Form.Item>\n            <Input\n              type={t('resetPassword.input.type')}\n              name={t('resetPassword.input.name')}\n              id={t('resetPassword.input.id')}\n              placeholder={t('resetPassword.input.placeholder')}\n              value={email}\n              onChange={onChangeHandler}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Style.Button>\n              <button className=\"ResetPas\" onClick={sendResetEmail}>\n                {t('resetPassword.buttonResetPassword')}\n              </button>\n            </Style.Button>\n          </Form.Item>\n          <Link to=\"/signIn\">&larr; {t('resetPassword.buttonBackSignIn')}</Link>\n        </Form>\n      </Style.Form>\n    </Style.Container>\n  );\n};\n\nexport default PasswordReset;\n","export const userEmail = 'userEmail';\n","import styled from 'styled-components';\nimport { Color } from '@core/constants/colors';\nimport { Adaptive } from '@core/constants/adaptive';\n\nconst Styled = {\n  Container: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 400px;\n    margin: 0 auto;\n    height: 500px;\n    border-radius: 3px;\n    padding-top: 20px;\n  `,\n  Button: styled.div`\n    width: 200px;\n    & > .SignIn {\n      width: 200px;\n      background: ${Color.AuthButton}\n      border: none;\n      font-size: 18px;\n      height: 30px;\n      color: ${Color.AuthButtonText};\n      transition: 0.4s linear;\n    }\n    & > .SignIn:hover {\n      color: ${Color.AuthButtonTextHover};\n      border: none;\n    }\n    & > .Google {\n      width: 200px;\n      background-color: ${Color.AuthGoogleButtonBackgroundColor};\n      border: none;\n      font-size: 15px;\n      height: 40px;\n      transition: 0.4s linear;\n    }\n    & > .Google:hover {\n      box-shadow: ${Color.AuthGoogleButtonHover};\n    }\n    & > .Google > span {\n      margin-left: 10px;\n    }\n  `,\n  Form: styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    border: 1px solid ${Color.MainAuthBorder};\n    padding: 80px;\n    box-shadow: ${Color.MainAuthBorder};\n    @media (max-width: ${Adaptive.notebook}) {\n      box-shadow: none;\n      border: none;\n    }\n  `,\n  Title: styled.span`\n    font-size: 30px;\n    font-style: italic;\n  `,\n  Links: styled.div`\n    display: flex;\n    flex-direction: row;\n    text-align: center;\n    justify-content: space-between;\n    margin: 20px 0;\n  `,\n  MainText: styled.div`\n    width: 200px;\n    text-align: center;\n  `,\n};\n\nexport default Styled;\n","import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Divider, Tooltip } from 'antd';\nimport { Toaster } from 'react-hot-toast';\nimport {\n  UserOutlined,\n  GoogleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Style from './StyledSignIn';\nimport { useTranslation } from 'react-i18next';\nimport { userEmail, userPassword } from './constants';\nimport { Color } from '@core/constants/colors';\nimport {\n  asyncSignInGoogle,\n  asyncSignInAction,\n} from '@store/actions/authActions';\n\nconst SignIn = (): JSX.Element => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const onChangeHandler = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget;\n\n      if (name === userEmail) {\n        setEmail(value);\n      } else if (name === userPassword) {\n        setPassword(value);\n      }\n    },\n    [],\n  );\n\n  const logginGoogle = useCallback(() => {\n    const user = { email, password };\n    dispatch(asyncSignInGoogle(user));\n  }, [email, password, dispatch]);\n\n  const logginEmailAndPassword = useCallback(() => {\n    const user = { email, password };\n    console.log('authChannel', email, password);\n    dispatch(asyncSignInAction(user));\n  }, [dispatch, email, password]);\n\n  return (\n    <>\n      <Style.Container>\n        <Toaster />\n        <Style.Form>\n          <Form>\n            <Style.Title>{t('signIn.title')}</Style.Title>\n            <Divider />\n            <Style.MainText>{t('signIn.mainText1')}</Style.MainText>\n            <Style.MainText>{t('signIn.mainText2')}</Style.MainText>\n            <Divider />\n            <Form.Item>\n              <Input\n                type={t('signIn.input.email.type')}\n                name={t('signIn.input.email.name')}\n                placeholder={t('signIn.input.email.placeholder')}\n                id={t('signIn.input.email.id')}\n                value={email}\n                onChange={onChangeHandler}\n                prefix={<UserOutlined />}\n                suffix={\n                  <Tooltip title=\"Extra information\">\n                    <InfoCircleOutlined style={{ color: Color.AuthFormIcon }} />\n                  </Tooltip>\n                }\n              />\n            </Form.Item>\n            <Form.Item>\n              <Input.Password\n                type={t('signIn.input.password.type')}\n                name={t('signIn.input.password.name')}\n                placeholder={t('signIn.input.password.placeholder')}\n                id={t('signIn.input.password.id')}\n                value={password}\n                onChange={onChangeHandler}\n                suffix={\n                  <Tooltip title=\"Extra information\">\n                    <InfoCircleOutlined style={{ color: Color.AuthFormIcon }} />\n                  </Tooltip>\n                }\n              />\n            </Form.Item>\n            <Form.Item>\n              <Style.Button>\n                <button className=\"SignIn\" onClick={logginEmailAndPassword}>\n                  {t('signIn.buttonLogin')}\n                </button>\n              </Style.Button>\n              <Style.Links>\n                <Link to=\"/signUp\">\n                  <span className=\"SignUp\">{t('signIn.buttonSignUp')} </span>\n                </Link>{' '}\n                <br />\n                <Link to=\"/passwordReset\">\n                  <span>{t('signIn.buttonForgetPassword')}</span>\n                </Link>\n              </Style.Links>\n            </Form.Item>\n            <Divider plain>{t('signIn.textBeforeGoogle')}</Divider>\n            <Form.Item>\n              <Style.Button>\n                <button className=\"Google\" onClick={logginGoogle}>\n                  <GoogleOutlined />\n                  <span>{t('signIn.textGoogle')}</span>\n                </button>\n              </Style.Button>\n            </Form.Item>\n          </Form>\n        </Style.Form>\n      </Style.Container>\n    </>\n  );\n};\n\nexport default SignIn;\n","export const userEmail = 'userEmail';\nexport const userPassword = 'userPassword';\n","import styled from 'styled-components';\nimport { Color } from '@core/constants/colors';\nimport { Adaptive } from '@core/constants/adaptive';\n\nconst Style = {\n  Container: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 400px;\n    margin: 0 auto;\n    height: 500px;\n    border-radius: 3px;\n    padding-top: 20px;\n  `,\n  Button: styled.div`\n    width: 200px;\n    & > .SignUp {\n      width: 200px;\n      background: ${Color.AuthButton}\n      border: none;\n      font-size: 18px;\n      height: 30px;\n      color: ${Color.AuthButtonText};\n      transition: 0.4s linear;\n    }\n    & > .SignUp:hover {\n      color: ${Color.AuthButtonTextHover};\n      border: none;\n    }\n    & > .Google {\n      width: 200px;\n      background-color: ${Color.AuthGoogleButtonBackgroundColor};\n      border: none;\n      font-size: 15px;\n      height: 40px;\n      transition: 0.4s linear;\n    }\n    & > .Google:hover {\n      box-shadow: ${Color.AuthGoogleButtonHover};\n    }\n    & > .Google > span {\n      margin-left: 10px;\n    }\n  `,\n  Form: styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    border: 1px solid ${Color.MainAuthBorder};\n    padding: 80px;\n    box-shadow: ${Color.MainAuthBorder};\n    @media (max-width: ${Adaptive.notebook}) {\n      box-shadow: none;\n      border: none;\n    }\n  `,\n  Title: styled.div`\n    font-size: 30px;\n    font-style: italic;\n    padding-bottom: 30px;\n  `,\n  Links: styled.div`\n    display: flex;\n    flex-direction: row;\n    text-align: center;\n    justify-content: space-between;\n    margin: 20px 0;\n  `,\n};\n\nexport default Style;\n","import React, { useCallback, useState } from 'react';\nimport { Form, Input, Divider, Tooltip } from 'antd';\nimport { UserOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport Style from './StyledSignUp';\nimport { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { displayFirstName, userEmail, userPassword } from './constants';\nimport { useTranslation } from 'react-i18next';\nimport { AuthRoutes } from '@core/constants/routes';\nimport { Color } from '@core/constants/colors';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport { asyncSignUp } from '@store/actions/authActions';\n\nconst SignUp = (): JSX.Element => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const onChangeHandlerEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget;\n      if (name === userEmail) {\n        setEmail(value);\n      }\n    },\n    [],\n  );\n\n  const onChangeHandlerPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget;\n      if (name === userPassword) {\n        setPassword(value);\n      }\n    },\n    [],\n  );\n\n  const onChangeHandlerName = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { name, value } = event.currentTarget;\n      if (name === displayFirstName) {\n        setDisplayName(value);\n      }\n    },\n    [],\n  );\n\n  const createUser = useCallback(\n    (event: React.SyntheticEvent) => {\n      const user = { email, password };\n      event.preventDefault();\n      dispatch(asyncSignUp(user));\n      history.push(AuthRoutes.home);\n    },\n    [dispatch, history, email, password],\n  );\n\n  const logginGoogle = useCallback(() => {\n    try {\n      dispatch({\n        type: ActionTypes.ASYNC_SIGN_IN_GOOGLE,\n      });\n    } catch (error) {\n      toast.error(error.message);\n    }\n  }, [dispatch]);\n\n  return (\n    <Style.Container>\n      <Toaster />\n      <Style.Form>\n        <Form>\n          <Style.Title>{t('signUp.title')}</Style.Title>\n          <Form.Item>\n            <Input\n              type={t('signUp.input.displayName.type')}\n              name={t('signUp.input.displayName.name')}\n              placeholder={t('signUp.input.displayName.placeholder')}\n              id={t('signUp.input.displayName.id')}\n              value={displayName}\n              onChange={onChangeHandlerName}\n              prefix={<UserOutlined />}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input\n              type={t('signUp.input.email.type')}\n              name={t('signUp.input.email.name')}\n              placeholder={t('signUp.input.email.placeholder')}\n              id={t('signUp.input.email.id')}\n              value={email}\n              onChange={onChangeHandlerEmail}\n              prefix={<UserOutlined />}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Input.Password\n              type={t('signUp.input.password.type')}\n              name={t('signUp.input.password.name')}\n              placeholder={t('signUp.input.password.placeholder')}\n              id={t('signUp.input.password.id')}\n              value={password}\n              onChange={onChangeHandlerPassword}\n              suffix={\n                <Tooltip title=\"Extra information\">\n                  <InfoCircleOutlined style={{ color: Color.AuthFormIcon }} />\n                </Tooltip>\n              }\n            />\n          </Form.Item>\n          <Form.Item>\n            <Style.Button>\n              <button className=\"SignUp\" onClick={createUser}>\n                {t('signUp.buttonSignUp')}\n              </button>\n            </Style.Button>\n            <Style.Links>\n              <p> {t('signUp.textBeforeSignIn')}</p>\n              <Link to=\"/signIn\">{t('signUp.buttonSignIn')}</Link>\n            </Style.Links>\n          </Form.Item>\n          <Divider plain>{t('signUp.textBeforeGoogle')}</Divider>\n          <Form.Item>\n            <Style.Button onClick={logginGoogle}>\n              <button onClick={logginGoogle}>\n                {t('signUp.buttonSignInGoogle')}\n              </button>\n            </Style.Button>\n          </Form.Item>\n        </Form>\n      </Style.Form>\n    </Style.Container>\n  );\n};\n\nexport default SignUp;\n","export const userEmail = 'userEmail';\nexport const userPassword = 'userPassword';\nexport const displayFirstName = 'displayName';\n","import { AuthRoutes } from '@core/constants/routes';\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport PasswordReset from './components/PasswordReset/PasswordReset';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\n\nconst Authentication = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route path={AuthRoutes.signIn} component={SignIn} />\n      <Route path={AuthRoutes.signUp} component={SignUp} />\n      <Route path={AuthRoutes.passwordReset} component={PasswordReset} />\n      <Redirect from=\"/\" to={AuthRoutes.signIn} />\n    </Switch>\n  );\n};\n\nexport default Authentication;\n","const config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nexport default config;\n","import firebase from '@firebase/app';\nimport '@firebase/auth';\nimport '@firebase/storage';\nimport '@firebase/firestore';\nimport '@firebase/database';\nimport config from './firebaseConfig';\n\nconst firebaseApp = !firebase.apps.length\n  ? firebase.initializeApp(config)\n  : firebase.app();\n\nexport const auth = firebaseApp.auth();\nexport const firestore = firebaseApp.firestore();\nconst storage = firebaseApp.storage();\nexport const storageRef = storage.ref();\nexport const database = firebaseApp.database();\n\nexport const generateUserDocument = async (user: {\n  email: string;\n  displayName: string;\n  photoURL: string;\n  uid: string;\n}): Promise<{ uid: string }> => {\n  if (!user) return;\n\n  try {\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n  \n    if (!snapshot.exists) {\n      const { email, displayName, photoURL } = user;\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n      });\n    }\n    return getUserDocument(user.uid);\n  } catch (error) {\n    return null;\n  }\n};\n\nconst getUserDocument = async (uid: string) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n\n    return {\n      uid,\n      ...userDocument.data(),\n    };\n  } catch (error) {\n    console.error('Error fetching user', error);\n  }\n};\n","import styled from 'styled-components';\nimport { Color } from '@constants/colors';\nimport { Adaptive } from '@core/constants/adaptive';\n\nconst Style = {\n  Container: styled.div`\n    max-width: 300px;\n    max-height: 600px;\n    overflow: scroll;\n    margin: 0 auto;\n    @media (max-width: ${Adaptive.notebook}) {\n      max-height: 500px;\n    }\n  `,\n  Words: styled.div`\n    max-width: 250px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px;\n    margin: 0 auto;\n  `,\n  UnpredWords: styled.span`\n    background-color: ${Color.UnpredWords};\n  `,\n  GuessedWords: styled.span`\n    background-color: ${Color.GuessedWords};\n  `,\n  Buttons: styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  `,\n};\n\nexport default Style;\n","import React, { useCallback, useEffect, useState, MouseEvent } from 'react';\nimport { RootStateOrAny, useSelector } from 'react-redux';\nimport { SoundOutlined } from '@ant-design/icons';\nimport { wordsURL } from '../../../../modules/HomePage/WordsList/constants';\nimport { useHistory } from 'react-router';\nimport Style from './StyledShortTermStatistics';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'antd';\nimport { MainRoutes } from '@core/constants/routes';\n\nconst ShortTermStatistics: React.FC = () => {\n  const [guessedWords, setGuessedWords] = useState([]);\n  const [unpredWords, setUnpredWords] = useState([]);\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const getAllQuessedWords = useSelector(\n    (state: RootStateOrAny) => state.currentWords.quessedWords,\n  );\n\n  const getAllUnpredictableWords = useSelector(\n    (state: RootStateOrAny) => state.currentWords.unpredWords,\n  );\n\n  useEffect(() => {\n    setGuessedWords(getAllQuessedWords);\n    setUnpredWords(getAllUnpredictableWords);\n  }, [getAllQuessedWords, getAllUnpredictableWords]);\n\n  const audioPlay = useCallback(url => {\n    const audio = new Audio(wordsURL.audioUrl + url);\n    audio.play();\n  }, []);\n\n  const handlerAudioButtons = useCallback(\n    (audio: string) => (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      audioPlay(audio);\n    },\n    [audioPlay],\n  );\n\n  const hanlderBackButton = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      history.push(MainRoutes.mainPage);\n    },\n    [history],\n  );\n\n  const hanlderStatisticsButton = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      history.push(MainRoutes.longTermStatistics);\n    },\n    [history],\n  );\n\n  return (\n    <>\n      <Style.Buttons>\n        <Button type=\"primary\" onClick={hanlderBackButton}>\n          {t('ShortStatistics.buttonReturn')}\n        </Button>\n        <Button type=\"primary\" onClick={hanlderStatisticsButton}>\n          {t('ShortStatistics.buttonStatistics')}\n        </Button>\n      </Style.Buttons>\n      <h1>\n        {t('Statistics.unpredWords')}\n        <Style.UnpredWords>{unpredWords.length}</Style.UnpredWords>\n      </h1>\n      <Style.Container>\n        {unpredWords &&\n          unpredWords.map(res => {\n            return (\n              <Style.Words key={res.id}>\n                <SoundOutlined onClick={handlerAudioButtons(res.audio)} />\n                <p>{res.word}</p>\n                <p>{res.transcription}</p>\n              </Style.Words>\n            );\n          })}\n      </Style.Container>\n      <h1>\n        {t('Statistics.guessedWords')}\n        <Style.GuessedWords>{guessedWords.length}</Style.GuessedWords>\n      </h1>\n      <Style.Container>\n        {guessedWords &&\n          guessedWords.map((res, i) => {\n            return (\n              <Style.Words key={i}>\n                <SoundOutlined onClick={handlerAudioButtons(res.audio)} />\n                <p>{res.word}</p>\n                <p>{res.transcription}</p>\n              </Style.Words>\n            );\n          })}\n      </Style.Container>\n    </>\n  );\n};\n\nexport default ShortTermStatistics;\n","import {\n  AsyncGetWordsAction,\n  AsyncGetWordsErrorAction,\n  AsyncSetWordAction,\n  GetWords,\n  GetWordsAction,\n  GetWordsErrorAction,\n  SetWordAction,\n  SetWord,\n  AllWords,\n  AllWordsFromSessionAction,\n  AsyncAllWordsFromSessionAction,\n  ClearWordsAction,\n  QuessedWords,\n  SetQuessedWordsAction,\n  SetUnpredictableWordsAction,\n  UnpredictableWords,\n  ScoreType,\n  SetScoreAction,\n} from '@type/types.d';\nimport { ActionTypes } from './constans.d';\n\nexport const GetWordsActions = (words: GetWords | null): GetWordsAction => ({\n  type: ActionTypes.GET_WORDS,\n  payload: words,\n});\n\nexport const SetWordActions = (word: SetWord | null): SetWordAction => ({\n  type: ActionTypes.SET_WORDS,\n  payload: word,\n});\n\nexport const AllWordsFromSessionActions = (\n  allWords: AllWords | null,\n): AllWordsFromSessionAction => ({\n  type: ActionTypes.ALL_WORDS_SESSION,\n  payload: allWords,\n});\n\nexport const GetWordsErrorActions = (): GetWordsErrorAction => ({\n  type: ActionTypes.GET_WORDS_ERROR,\n});\n\nexport const AsyncGetWordsActions = (\n  words: GetWords | null,\n): AsyncGetWordsAction => ({\n  type: ActionTypes.ASYNC_GET_WORDS,\n  payload: words,\n});\n\nexport const AsyncSetWordActions = (\n  setWord: string | SetWord | null,\n): AsyncSetWordAction => ({\n  type: ActionTypes.ASYNC_SET_WORDS,\n  payload: setWord,\n});\n\nexport const AsyncAllWordsFromSessionActions = (\n  allWords: AllWords | null,\n): AsyncAllWordsFromSessionAction => ({\n  type: ActionTypes.ASYNC_ALL_WORDS_SESSION,\n  payload: allWords,\n});\n\nexport const AsyncGetWordsErrorActions = (): AsyncGetWordsErrorAction => ({\n  type: ActionTypes.ASYNC_GET_WORDS_ERROR,\n});\n\nexport const ClearWordsActions = (): ClearWordsAction => ({\n  type: ActionTypes.CLEAR_WORDS,\n});\n\nexport const SetGuessedWordsActions = (\n  quessedWords: QuessedWords | null,\n): SetQuessedWordsAction => ({\n  type: ActionTypes.QUESSED_WORDS,\n  payload: quessedWords,\n});\n\nexport const SetUnpredictableWordsActions = (\n  unpredWords: UnpredictableWords | null,\n): SetUnpredictableWordsAction => ({\n  type: ActionTypes.UNPREDICTABLE_WORDS,\n  payload: unpredWords,\n});\n\nexport const SetScoreActions = (score: ScoreType): SetScoreAction => ({\n  type: ActionTypes.SET_SCORE,\n  payload: score,\n});\n","import styled from 'styled-components';\n\nconst Style = {\n  Maintext: styled.div`\n    text-algin: center;\n    max-width: 210px;\n    margin: 0 auto;\n    font-size: 25px;\n    text-align: center;\n  `,\n};\n\nexport default Style;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { WordsObject } from '@type/types';\nimport {\n  SetGuessedWordsActions,\n  SetScoreActions,\n  SetUnpredictableWordsActions,\n} from '@store/actions/wordsActions';\nimport Style from './StyledScore';\n\nconst Score: React.FC = () => {\n  const getAllQuessedWords = useSelector(\n    (state: RootStateOrAny) => state.currentWords.quessedWords,\n  );\n\n  const getWordsFetch = useSelector(\n    (state: RootStateOrAny) => state.currentWords.words,\n  );\n\n  const speechWord = useSelector(\n    (state: RootStateOrAny) => state.currentWords.setWord,\n  );\n\n  const getAllWords = useSelector(\n    (state: RootStateOrAny) => state.currentWords.allWords,\n  );\n\n  const [score, setScore] = useState(0);\n  const [word, setWord] = useState('');\n  const [unpredWords, setUnpredWords] = useState([]);\n  const [guessedWords, setGuessedWords] = useState([]);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setUnpredWords(\n      getAllWords.filter(\n        (item: WordsObject) =>\n          !getAllQuessedWords.some((elem: WordsObject) => elem === item),\n      ),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getAllWords, guessedWords]);\n\n  useEffect(() => {\n    setWord(speechWord);\n    unpredWords.map((item: WordsObject) => {\n      if (word.indexOf(item.word) >= 0) {\n        setGuessedWords([item]);\n      }\n    });\n  }, [speechWord, unpredWords, word]);\n  console.log(word);\n\n  useEffect(() => {\n    setUnpredWords(\n      unpredWords.filter((elem: WordsObject) => !guessedWords.includes(elem)),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [guessedWords]);\n\n  useEffect(() => {\n    unpredWords.map((item: WordsObject) => {\n      if (word) {\n        if (word.indexOf(item.word) >= 0) {\n          const fractionalPart = Number(getWordsFetch[0].group);\n          const wholePart = 10;\n          const numberOfPoints = (\n            (wholePart + fractionalPart) /\n            wholePart\n          ).toFixed(1);\n          setScore(\n            (prevNumberOfPoints: number) =>\n              Number(prevNumberOfPoints) + Number(numberOfPoints),\n          );\n          toast.success(`${t('Score.addScore')}`);\n        }\n      }\n    });\n  }, [getWordsFetch, t, unpredWords, word]);\n\n  useEffect(() => {\n    dispatch(SetGuessedWordsActions(guessedWords));\n    dispatch(SetUnpredictableWordsActions(unpredWords));\n    dispatch(SetScoreActions(score));\n  }, [dispatch, unpredWords, guessedWords, score]);\n\n  return (\n    <>\n      <Toaster />\n      <Style.Maintext>\n        {t('Score.mainTetx')}: {score}\n      </Style.Maintext>\n    </>\n  );\n};\n\nexport default Score;\n","import styled from 'styled-components';\nimport { Color } from '@constants/colors';\nimport { Adaptive } from '@core/constants/adaptive';\n\nconst Style = {\n  Container: styled.div`\n    width: 1100px;\n    height: 530px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    @media (max-width: ${Adaptive.notebook}) {\n      width: 700px;\n    }\n    @media (max-width: ${Adaptive.smartphone}) {\n      width: 390px;\n      height: 600px;\n      justify-content: space-around;\n      padding: 0;\n    }\n  `,\n  Groups: styled.div`\n    width: 500px;\n    margin: 0 auto;\n    margin-top: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    @media (max-width: ${Adaptive.smartphone}) {\n      flex-direction: row;\n      flex-wrap: wrap;\n      width: 300px;\n      & > button {\n        margin: 5px;\n      }\n    }\n  `,\n  MainImage: styled.div`\n    margin: 0 auto;\n    text-align: center;\n  `,\n  WordsContainer: styled.div`\n    margin: 0 auto;\n    width: 1100px;\n    height: 200px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    @media (max-width: ${Adaptive.notebook}) {\n      width: 700px;\n    }\n    @media (max-width: ${Adaptive.smartphone}) {\n      flex-wrap: wrap;\n      width: 350px;\n      height: 200px;\n    }\n  `,\n  Words: styled.div`\n    width: 200px;\n    max-height: 100px;\n    margin: 0 auto;\n    margin-bottom: 20px;\n    border: ${Color.WordsBorder};\n    border-radius: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    @media (max-width: ${Adaptive.notebook}) {\n      width: 120px;\n    }\n    @media (max-width: ${Adaptive.smartphone}) {\n      flex-direction: column;\n      width: 120px;\n    }\n  `,\n  WordsText: styled.div`\n    width: 100px;\n    text-align: center;\n  `,\n  SpokenWord: styled.div`\n    width: 100px;\n    margin: 0 auto;\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n  `,\n};\n\nexport default Style;\n","export default __webpack_public_path__ + \"static/media/initial-image.da427773.png\";","import React, { useCallback, useEffect, useState, MouseEvent } from 'react';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport {\n  AsyncAllWordsFromSessionActions,\n  AsyncGetWordsActions,\n} from '@store/actions/wordsActions';\nimport { Group, wordsURL } from './constants';\nimport Style from './StyledWordList';\nimport { SoundOutlined, CommentOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport StartImage from '../../../assets/initial-image.png';\n\nconst WordsList: React.FC = () => {\n  const dispatch = useDispatch();\n  const Groups = [0, 1, 2, 3, 4, 5];\n  const easyGroup = 0;\n\n  const getWordsGroup = useCallback(\n    group => {\n      dispatch(AsyncGetWordsActions(group));\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    getWordsGroup(easyGroup);\n  }, [getWordsGroup]);\n\n  const [words, setWords] = useState([]);\n  const [image, setImage] = useState<string>(StartImage);\n  const [Buttons] = useState(Groups);\n\n  const getWordsFetch = useSelector(\n    (state: RootStateOrAny) => state.currentWords.words,\n  );\n\n  const speechWord = useSelector(\n    (state: RootStateOrAny) => state.currentWords.setWord,\n  );\n\n  const [spokenWord, setSpokenWord] = useState('');\n\n  const getAllQuessedWords = useSelector(\n    (state: RootStateOrAny) => state.currentWords.quessedWords,\n  );\n\n  useEffect(() => {\n    if (speechWord) {\n      setSpokenWord(speechWord.split(' ').pop());\n    }\n  }, [speechWord]);\n\n  useEffect(() => {\n    setWords(getWordsFetch);\n    if (getWordsFetch) {\n      dispatch(\n        AsyncAllWordsFromSessionActions(\n          getWordsFetch.map((res: Record<string, unknown>) => res),\n        ),\n      );\n    }\n  }, [getWordsFetch, dispatch]);\n\n  const audioPlay = useCallback(url => {\n    const audio = new Audio(wordsURL.audioUrl + url);\n    audio.play();\n  }, []);\n\n  const getImages = useCallback(\n    image => {\n      setImage(wordsURL.imageUrl + image);\n    },\n    [setImage],\n  );\n\n  const handlerButtonsGroups = useCallback(\n    (group: number) => (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      getWordsGroup(group);\n    },\n    [getWordsGroup],\n  );\n\n  const handlerImagesButtons = useCallback(\n    (image: string) => (event: MouseEvent<HTMLDivElement>) => {\n      event.preventDefault();\n      getImages(image);\n    },\n    [getImages],\n  );\n\n  const handlerAudioButtons = useCallback(\n    (audio: string) => (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      audioPlay(audio);\n    },\n    [audioPlay],\n  );\n\n  return (\n    <>\n      <Style.Container>\n        <Style.Groups>\n          {Buttons.map((res, i) => {\n            return (\n              <Button key={res} onClick={handlerButtonsGroups(i)}>\n                {Group[i]}\n              </Button>\n            );\n          })}\n        </Style.Groups>\n        <Style.MainImage>\n          <img src={image} />\n        </Style.MainImage>\n        <Style.SpokenWord>\n          <CommentOutlined />\n          <span>{spokenWord}</span>\n        </Style.SpokenWord>\n        <Style.WordsContainer>\n          {words &&\n            words.map((res, i) => {\n              return (\n                <Style.Words\n                  key={i}\n                  onClick={handlerImagesButtons(res.image)}\n                  className={\n                    getAllQuessedWords.includes(res) ? 'Active' : undefined\n                  }>\n                  <SoundOutlined onClick={handlerAudioButtons(res.audio)} />\n                  <Style.WordsText>\n                    <p>{res.word}</p>\n                    <p>{res.transcription}</p>\n                  </Style.WordsText>\n                </Style.Words>\n              );\n            })}\n        </Style.WordsContainer>\n      </Style.Container>\n    </>\n  );\n};\n\nexport default WordsList;\n","import { Adaptive } from '@core/constants/adaptive';\nimport styled from 'styled-components';\n\nconst Style = {\n  Buttons: styled.div`\n    width: 600px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    & > #buttonSpeak {\n      width: 300px;\n    }\n    & > button {\n      font-size: 20px;\n      height: 40px;\n    }\n    @media (max-width: ${Adaptive.smartphone}) {\n      flex-direction: column;\n      flex-wrap: wrap;\n      width: 290px;\n      height: 150px;\n      & > #buttonSpeak {\n        width: 200px;\n      }\n      margin-top: 550px;\n    }\n  `,\n};\n\nexport default Style;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  AsyncGetWordsActions,\n  AsyncSetWordActions,\n  ClearWordsActions,\n} from '@store/actions/wordsActions';\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from 'react-speech-recognition';\nimport { useTranslation } from 'react-i18next';\nimport Style from './StyledSpeechRecording';\nimport { Button } from 'antd';\n\nconst SpeechRecording: React.FC = () => {\n  const dispatch = useDispatch();\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const microphoneRef = useRef(null);\n  const { t } = useTranslation();\n\n  const getWordsGroup = useCallback(\n    group => {\n      dispatch(AsyncGetWordsActions(group));\n    },\n    [dispatch],\n  );\n  useEffect(() => {\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n      alert(`${t('SpeechRecording.notBrowserSupportSpeechRecording')}`);\n    }\n  }, [t]);\n\n  const renderSpeech = useCallback(() => {\n    microphoneRef.current.classList.add('listening');\n    SpeechRecognition.startListening({ language: 'en-US', continuous: true });\n  }, []);\n\n  const stopHandle = useCallback(() => {\n    microphoneRef.current.classList.remove('listening');\n    SpeechRecognition.stopListening();\n  }, []);\n\n  const handleReset = useCallback(() => {\n    stopHandle();\n    resetTranscript();\n    getWordsGroup(0);\n    dispatch(ClearWordsActions());\n  }, [getWordsGroup, resetTranscript, stopHandle, dispatch]);\n\n  useEffect(() => {\n    dispatch(AsyncSetWordActions(transcript.toLocaleLowerCase()));\n  }, [dispatch, transcript]);\n\n  return (\n    <>\n      <Style.Buttons>\n        <Button type=\"primary\" onClick={handleReset}>\n          {t('SpeechRecording.buttonReset')}\n        </Button>\n        <Button type=\"primary\" onClick={stopHandle}>\n          {t('SpeechRecording.buttonStop')}\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={renderSpeech}\n          ref={microphoneRef}\n          id=\"buttonSpeak\">\n          {t('SpeechRecording.buttonSpeak')}\n        </Button>\n      </Style.Buttons>\n    </>\n  );\n};\n\nexport default SpeechRecording;\n","import { Adaptive } from '@core/constants/adaptive';\nimport styled from 'styled-components';\n\nconst Style = {\n  Buttons: styled.div`\n    max-width: 800px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0 auto;\n    & > button {\n      font-size: 20px;\n      height: 40px;\n    }\n    @media (max-width: ${Adaptive.smartphone}) {\n      text-align: center;\n      flex-direction: column;\n      justify-content: center;\n      height: 300px;\n    }\n  `,\n  Header: styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  `,\n};\n\nexport default Style;\n","import React, { MouseEvent, useCallback, useEffect, useState } from 'react';\nimport Score from '../Score/Score';\nimport { useTranslation } from 'react-i18next';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport WordsList from '../WordsList/WordsList';\nimport SpeechRecording from '../SpeechRecording/SpeechRecording';\nimport { useHistory } from 'react-router-dom';\nimport { asyncSignOutAction } from '@store/actions/authActions';\nimport { database } from '@firebaseConfig/index';\nimport { ClearWordsActions } from '@store/actions/wordsActions';\nimport Style from './StyledMainPage';\nimport { Button } from 'antd';\nimport { MainRoutes } from '@core/constants/routes';\n\nconst MainPage: React.FC = () => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const user = useSelector((state: RootStateOrAny) => state.currentAuth.user);\n  const startScore = 0;\n  const [dbScore, setDbScore] = useState<number>(startScore);\n\n  const getAllScore = useSelector(\n    (state: RootStateOrAny) => state.currentWords.score,\n  );\n\n  useEffect(() => {\n    database\n      .ref()\n      .child('users')\n      .child(`${user.uid}`)\n      .on('value', snapshot => {\n        const data = snapshot.val();\n        console.log('data', data)\n        if (data) {\n          if (data.score) {\n            setDbScore(Number(startScore));\n          }\n          if (data.score !== undefined) {\n            setDbScore(data.score);\n          }\n        }\n      });\n  }, [user]);\n\n  const signOut = useCallback(() => {\n    dispatch(asyncSignOutAction());\n    dispatch(ClearWordsActions());\n  }, [dispatch]);\n\n  const history = useHistory();\n\n  const handleResultsButton = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      history.push(MainRoutes.shortTermStatistics);\n      const now = new Date().toLocaleString();\n      database\n        .ref()\n        .child('users')\n        .child(`${user.uid}`)\n        .child('score')\n        .set(getAllScore + dbScore);\n      database.ref().child('users').child(`${user.uid}`).child('date').set(now);\n    },\n    [dbScore, getAllScore, history, user.uid],\n  );\n\n  return (\n    <>\n      <Style.Header>\n        <Button onClick={signOut}>{t('signOut.buttonSignOut')}</Button>\n        <Score />\n      </Style.Header>\n      <WordsList />\n      <Style.Buttons>\n        <SpeechRecording />\n        <Button type=\"primary\" onClick={handleResultsButton}>\n          Results\n        </Button>\n      </Style.Buttons>\n    </>\n  );\n};\n\nexport default MainPage;\n","import styled from 'styled-components';\n\nconst Style = {\n  UsersTable: styled.table`\n    margin: 0 auto;\n    font-size: 20px;\n    & > tr > th {\n      padding: 10px;\n      text-align: center;\n    }\n    & > tr > td {\n      padding: 10px;\n      text-align: center;\n    }\n  `,\n  Buttons: styled.div`\n    display: flex;\n    justify-content: space-between;\n  `,\n};\n\nexport default Style;\n","import React, { MouseEvent, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { database } from '@firebaseConfig/index';\nimport Style from './StyledLongTermStatistics';\nimport { Button } from 'antd';\nimport { MainRoutes } from '@core/constants/routes';\nimport { useTranslation } from 'react-i18next';\n\nconst LongTermStatistics: React.FC = () => {\n  const [info, setInfo] = useState([]);\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    database\n      .ref()\n      .child('/users')\n      .on('value', snapshot => {\n        setInfo(Object.values(snapshot.val()));\n      });\n  }, []);\n\n  const sorted = [...info].sort((a, b) => {\n    return b.score - a.score;\n  });\n\n  const handlerSortButtons = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      setInfo(sorted);\n    },\n    [sorted],\n  );\n\n  const hanlderBackButton = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      history.push(MainRoutes.shortTermStatistics);\n    },\n    [history],\n  );\n\n  return (\n    <>\n      <Style.Buttons>\n        <Button type=\"primary\" onClick={hanlderBackButton}>\n          {t('LongStatistics.buttonReturn')}\n        </Button>\n        <Button onClick={handlerSortButtons}>\n          {t('LongStatistics.sortByScore')}\n        </Button>\n      </Style.Buttons>\n      <Style.UsersTable>\n        <tr>\n          <tr>{t('LongStatistics.position')}</tr>\n          <th>{t('LongStatistics.email')}</th>\n          <th>{t('LongStatistics.displayName')}</th>\n          <th>{t('LongStatistics.score')}</th>\n          <th>{t('LongStatistics.date')}</th>\n        </tr>\n        {info.map(\n          (\n            res: {\n              date: string;\n              displayName: string;\n              email: string;\n              photoURL: string;\n              score: number;\n              uid: string;\n            },\n            i: number,\n          ) => {\n            return (\n              <tr key={res.uid}>\n                <td>{++i}</td>\n                <td>{res.email}</td>\n                <td>{res.displayName}</td>\n                <td>{res.score}</td>\n                <td>{res.date}</td>\n              </tr>\n            );\n          },\n        )}\n      </Style.UsersTable>\n    </>\n  );\n};\n\nexport default LongTermStatistics;\n","import { Adaptive } from '@core/constants/adaptive';\nimport styled from 'styled-components';\n\nconst Style = {\n  Container: styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    & > button {\n      width: 400px;\n      height: 60px;\n      font-size: 30px;\n    }\n    @media (max-width: ${Adaptive.smartphone}) {\n      & > h3 {\n        width: 300px;\n        text-align: center;\n        margin: 0 auto;\n      }\n    }\n  `,\n};\n\nexport default Style;\n","import React, { MouseEvent, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router';\nimport Style from './StyledStartPage';\nimport { Button } from 'antd';\nimport { MainRoutes } from '@core/constants/routes';\n\nconst StartPage: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const handleStartButton = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      history.push(MainRoutes.mainPage);\n    },\n    [history],\n  );\n\n  return (\n    <>\n      <Style.Container>\n        <h1>{t('StartPage.HeaderText')}</h1>\n        <h3>{t('StartPage.MainText')}</h3>\n        <Button type=\"primary\" onClick={handleStartButton}>\n          {t('StartPage.buttonStart')}\n        </Button>\n      </Style.Container>\n    </>\n  );\n};\n\nexport default StartPage;\n","import React from 'react';\nimport ShortTermStatistics from '../HomePage/StatisticsPage/ShortTermStatistics/ShortTermStatistics';\nimport { Redirect, Route, Switch } from 'react-router';\nimport MainPage from './MainPage/MainPage';\nimport LongTermStatistics from './StatisticsPage/LongTermStatistics/LongTermStatistics';\nimport StartPage from './MainPage/StartPage/StartPage';\nimport { MainRoutes } from '@constants/routes';\n\nconst HomePage: React.FC = () => {\n  return (\n    <>\n      <Switch>\n        <Route\n          path={MainRoutes.shortTermStatistics}\n          component={ShortTermStatistics}\n        />\n        <Route\n          path={MainRoutes.longTermStatistics}\n          component={LongTermStatistics}\n        />\n        <Route path={MainRoutes.mainPage} component={MainPage} />\n        <Route path={MainRoutes.startPage} component={StartPage} />\n        <Route path=\"/\">\n          <Redirect to={MainRoutes.startPage} />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Authentication from '../../modules/Authentication/Authentication';\nimport { generateUserDocument, auth, database } from '@firebaseConfig/index';\nimport { signInAction } from '@store/actions/authActions';\nimport HomePage from '../../modules/HomePage/HomePage';\n\nconst Routes: React.FC = () => {\n  const user = useSelector((state: RootStateOrAny) => state.currentAuth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (userAuth) => {\n      console.log('userAuth', userAuth);\n      const user = await generateUserDocument(userAuth);\n      if (user) {\n        dispatch(signInAction(user));\n        database.ref().child('users').child(`${user.uid}`).set(user)\n          .catch((error) => {\n            console.log('error user set', error);\n          });\n      }\n    });\n  }, [dispatch]);\n\n  console.log('user', user.login);\n\n  return user.login ? (\n    <>\n      <Toaster />\n      <Router>\n        <HomePage />\n      </Router>\n    </>\n  ) : (\n    <Router>\n      <Authentication />\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Routes from '@routes/Routes';\nimport './App.css';\n\nfunction App(): JSX.Element {\n  return <Routes />;\n}\n\nexport default App;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport EN from './locales/en/translation.json';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: EN,\n      },\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n    react: {\n      useSuspense: false,\n    },\n  });\n\nexport default i18n;\n","const initialState: AuthState = {\n  login: false as boolean,\n  user: null as null,\n};\nimport { ActionTypes } from '@store/actions/constans.d';\nimport { AuthActions, AuthState } from '@type/types';\n\nconst currentAuth = (\n  state: AuthState = initialState,\n  action: AuthActions,\n): AuthState => {\n  switch (action.type) {\n    case ActionTypes.SIGN_IN: {\n      return {\n        ...state,\n        login: true,\n        user: action.payload,\n      };\n    }\n    case ActionTypes.SIGN_OUT: {\n      return {\n        ...state,\n        login: false,\n        user: null,\n      };\n    }\n    case ActionTypes.RESET_PASSW: {\n      return {\n        ...state,\n        login: false,\n      };\n    }\n    case ActionTypes.SIGN_UP: {\n      return {\n        ...state,\n        login: true,\n        user: action.payload,\n      };\n    }\n    case ActionTypes.SIGN_ERROR: {\n      return {\n        ...state,\n        login: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default currentAuth;\n","import { ScoreType } from './../../type/types.d';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport {\n  AllWords,\n  GetWords,\n  QuessedWords,\n  SetWord,\n  UnpredictableWords,\n  WordsActions,\n  WordsObject,\n} from '@type/types';\n\nexport interface WordsState {\n  words: GetWords | [];\n  setWord: SetWord;\n  allWords: AllWords;\n  quessedWords: QuessedWords;\n  unpredWords: UnpredictableWords;\n  score: ScoreType;\n}\n\nconst initialState: WordsState = {\n  allWords: [],\n  words: [],\n  quessedWords: [],\n  unpredWords: [],\n  setWord: '',\n  score: null as null,\n};\n\nconst currentWords = (\n  state: WordsState = initialState,\n  action: WordsActions,\n): WordsState => {\n  switch (action.type) {\n    case ActionTypes.GET_WORDS: {\n      return {\n        ...state,\n        words: action.payload,\n      };\n    }\n    case ActionTypes.SET_WORDS: {\n      return {\n        ...state,\n        setWord: action.payload,\n      };\n    }\n    case ActionTypes.ALL_WORDS_SESSION: {\n      return {\n        ...state,\n        allWords: [\n          ...state.allWords,\n          ...(action.payload || [])\n            .flat()\n            .filter(\n              (item: WordsObject) =>\n                !state.allWords.some(\n                  (elem: WordsObject) => item.id === elem.id,\n                ),\n            ),\n        ],\n      };\n    }\n    case ActionTypes.CLEAR_WORDS: {\n      return {\n        ...state,\n        allWords: [],\n        words: [],\n        quessedWords: [],\n        unpredWords: [],\n        setWord: '',\n        score: null as null,\n      };\n    }\n    case ActionTypes.QUESSED_WORDS: {\n      return {\n        ...state,\n        quessedWords: [\n          ...state.quessedWords,\n          ...(action.payload || []).filter(\n            (item: WordsObject) =>\n              !state.quessedWords.some(\n                (elem: WordsObject) => item.id === elem.id,\n              ),\n          ),\n        ],\n      };\n    }\n    case ActionTypes.UNPREDICTABLE_WORDS: {\n      return {\n        ...state,\n        unpredWords: action.payload,\n      };\n    }\n    case ActionTypes.SET_SCORE: {\n      return {\n        ...state,\n        score: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default currentWords;\n","import { combineReducers } from 'redux';\nimport currentAuth from './currentAuth';\nimport currentWords from './currentWords';\n\nconst rootReducer = combineReducers({\n  currentAuth,\n  currentWords,\n});\n\nexport default rootReducer;\n","import firebase from 'firebase';\nimport toast from 'react-hot-toast';\nimport { auth, generateUserDocument } from '.';\nimport i18n from '@i18n/index';\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const resetPassword = async (email: string): Promise<void> => {\n  await auth.sendPasswordResetEmail(email);\n  toast.success(`${i18n.t('toasts.resetPasswordSuccess')}`);\n};\n\nexport const authStateChange = (): void => {\n  auth.onAuthStateChanged(async (userAuth) => {\n    const user = await generateUserDocument(userAuth);\n    return user;\n  });\n};\n\nexport const signInEmailAndPassword = async (\n  email: string,\n  password: string,\n): Promise<firebase.auth.UserCredential> => {\n  const data = await auth.signInWithEmailAndPassword(email, password);\n  toast.success(`${i18n.t('toasts.signInSuccess')}`);\n  return data;\n};\n\nexport const signInWithGoogle = async (): Promise<void> => {\n  await auth.signInWithPopup(provider);\n  toast.success(`${i18n.t('toasts.signInSuccess')}`);\n};\n\nexport const signUpEmailAndPassword = async (\n  email: string,\n  password: string,\n): Promise<void> => {\n  await auth.createUserWithEmailAndPassword(email, password);\n  toast.success(`${i18n.t('toasts.signUpSuccess')}`);\n};\n\nexport const signOut = async (): Promise<void> => {\n  await auth.signOut();\n};\n","import { resetPassword } from '@firebaseConfig/firebaseAuthQueries';\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\nimport {\n  resetPasswordAction,\n  signErrorAction,\n} from '@store/actions/authActions';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport { AsyncResetPasswordAction } from '@type/types';\n\nexport const workerAuthResetPassword = function* (\n  action: AsyncResetPasswordAction,\n): Generator {\n  const { email } = action.payload;\n  try {\n    yield call(resetPassword, email);\n    yield put(resetPasswordAction());\n  } catch {\n    yield put(signErrorAction());\n  }\n};\n\nexport default function* watchAuthResetPassword(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_RESET_PASSWORD, workerAuthResetPassword);\n}\n","import { signOut } from '@firebaseConfig/firebaseAuthQueries';\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { signErrorAction, signOutAction } from '@store/actions/authActions';\nimport { ActionTypes } from '@store/actions/constans.d';\n\nexport const workerAuthSignOut = function* (): Generator {\n  try {\n    yield call(signOut);\n    yield put(signOutAction());\n  } catch {\n    yield put(signErrorAction());\n  }\n};\n\nexport default function* watchAuthSignOut(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_SIGN_OUT, workerAuthSignOut);\n}\n","import { signInWithGoogle } from '@firebaseConfig/firebaseAuthQueries';\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { signErrorAction, signInAction } from '@store/actions/authActions';\nimport { ActionTypes } from '@store/actions/constans.d';\n\nexport const workerAuthSignInGoogle = function* (): Generator {\n  try {\n    const authChannel = yield call(signInWithGoogle);\n    if (authChannel) {\n      yield put(signInAction(authChannel));\n    }\n  } catch {\n    yield put(signErrorAction());\n  }\n};\n\nexport default function* watchAuthSignInGoogle(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_SIGN_IN_GOOGLE, workerAuthSignInGoogle);\n}\n","import toast from 'react-hot-toast';\nimport { signInEmailAndPassword } from '@firebaseConfig/firebaseAuthQueries';\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { signErrorAction, signInAction } from '@store/actions/authActions';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport { AsyncSignInAction } from '@type/types';\n\nexport function* workerAuthSignIn(action: AsyncSignInAction): Generator {\n  const { email, password } = action.payload;\n\n  try {\n    const authChannel = yield call(signInEmailAndPassword, email, password);\n    console.log('signInEmailAndPassword', authChannel);\n    if (authChannel) {\n      yield put(signInAction(authChannel));\n    }\n  } catch (error: Error | unknown) {\n    if (error instanceof Error) {\n      toast.error(error.message);\n      yield put(signErrorAction());\n    }\n  }\n}\n\nexport default function* watchAuthSignIn(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_SIGN_IN, workerAuthSignIn);\n}\n","import { signUpEmailAndPassword } from '@firebaseConfig/firebaseAuthQueries';\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { signErrorAction, signUpAction } from '@store/actions/authActions';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport { AsyncSignUpAction } from '@type/types';\n\nexport const workerAuthSignUp = function* (\n  action: AsyncSignUpAction,\n): Generator {\n  const { email, password } = action.payload;\n  try {\n    const authChannel = yield call(signUpEmailAndPassword, email, password);\n    if (authChannel) {\n      yield put(signUpAction(authChannel));\n    }\n  } catch {\n    yield put(signErrorAction());\n  }\n};\n\nexport default function* watchAuthSignUp(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_SIGN_UP, workerAuthSignUp);\n}\n","export const wordsUrl = `https://afternoon-falls-25894.herokuapp.com/words?`;\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport {\n  GetWordsActions,\n  GetWordsErrorActions,\n} from '@store/actions/wordsActions';\nimport { AsyncGetWordsAction } from '@type/types';\nimport { wordsUrl } from './constants';\n\nexport const fetchWordsAsync = function* (\n  action: AsyncGetWordsAction,\n): Generator {\n  try {\n    const group = action.payload;\n    const maxGroupNumber = 30;\n    const minGroupNumber = 0;\n    const wordsFetch = yield call(() => {\n      const page =\n        Math.floor(\n          Math.random() *\n            (Math.floor(maxGroupNumber) - Math.ceil(minGroupNumber)),\n        ) + Math.ceil(minGroupNumber);\n      const url = wordsUrl + `page=${page}` + `&group=${group}`;\n      return fetch(url).then(res => res.json());\n    });\n    const maxWordCount = 10;\n    const words = Object.values(wordsFetch);\n    const numbers = new Set();\n    while (numbers.size < maxWordCount) {\n      const randomWord = Math.floor(Math.random() * words.length);\n      const items = words[randomWord];\n      numbers.add(items);\n    }\n    const arr: unknown = Array.from(numbers);\n    yield put(GetWordsActions(arr));\n  } catch {\n    yield put(GetWordsErrorActions());\n  }\n};\n\nexport default function* watchWordsGet(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_GET_WORDS, fetchWordsAsync);\n}\n","import { put, takeLatest } from '@redux-saga/core/effects';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport {\n  GetWordsErrorActions,\n  SetWordActions,\n} from '@store/actions/wordsActions';\nimport { AsyncSetWordAction } from '@type/types';\n\nexport const workerSetWordsAsync = function* (\n  action: AsyncSetWordAction,\n): Generator {\n  try {\n    yield put(SetWordActions(action.payload));\n  } catch {\n    yield put(GetWordsErrorActions());\n  }\n};\n\nexport default function* watchWordsSet(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_SET_WORDS, workerSetWordsAsync);\n}\n","import { put, takeLatest } from '@redux-saga/core/effects';\nimport { ActionTypes } from '@store/actions/constans.d';\nimport {\n  GetWordsErrorActions,\n  AllWordsFromSessionActions,\n} from '@store/actions/wordsActions';\nimport { AsyncAllWordsFromSessionAction } from '@type/types';\n\nexport const workerAllWordsAsync = function* (\n  action: AsyncAllWordsFromSessionAction,\n): Generator {\n  try {\n    yield put(AllWordsFromSessionActions(action.payload));\n  } catch {\n    yield put(GetWordsErrorActions());\n  }\n};\n\nexport default function* watchAllWords(): Generator {\n  yield takeLatest(ActionTypes.ASYNC_ALL_WORDS_SESSION, workerAllWordsAsync);\n}\n","import { all } from '@redux-saga/core/effects';\nimport watchAuthResetPassword from './authSaga/resetPasswordSaga';\nimport watchAuthSignOut from './authSaga/sighOutSaga';\nimport watchAuthSignInGoogle from './authSaga/signInGoogleSaga';\nimport watchAuthSignIn from './authSaga/signInSaga';\nimport watchAuthSignUp from './authSaga/signUpSaga';\nimport watchWordsGet from './wordsSaga/getWordsSaga';\nimport watchWordsSet from './wordsSaga/setWordSaga';\nimport watchAllWords from './wordsSaga/allWordsSaga';\n\nexport default function* rootSaga(): Generator {\n  yield all([\n    watchAuthResetPassword(),\n    watchAuthSignIn(),\n    watchAuthSignUp(),\n    watchAuthSignInGoogle(),\n    watchAuthSignOut(),\n    watchWordsGet(),\n    watchWordsSet(),\n    watchAllWords(),\n  ]);\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport './core/i18n';\nimport store from '@store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}